package kr.or.connect.jdbcexam.dao;

import java.sql.*;
import java.util.*;

import kr.or.connect.jdbcexam.dto.Role;

public class RoleDao {
	private static List<Role> list = new ArrayList<>();
	private static String url = "jdbc:mysql://localhost:3306/connectdb";
	private static String id = "root";
	private static String password = "1234";
	
	public Role getRole(int roleId) {
		Role role = null;
		Connection conn = null;
		PreparedStatement ps = null;
		ResultSet rs = null;
		
		try {
			Class.forName("com.mysql.cj.jdbc.Driver");
			conn = DriverManager.getConnection(url, id, password);
			String sql = "select * from role where role_id = ?;";
			ps = conn.prepareStatement(sql);
			ps.setInt(1, roleId);
			rs = ps.executeQuery();
			
			if(rs.next()) {
				int id = rs.getInt(1);
				String dec = rs.getString(2);
				role = new Role(id, dec);
			}
			
		}
		catch(Exception e){
			e.printStackTrace();
		}
		finally {
			if(rs!=null) {
				try {
					rs.close();
				}
				catch(SQLException e) {
					e.printStackTrace();
				}
			}
			if(ps!=null) {
				try {
					ps.close();
				}
				catch(SQLException e) {
					e.printStackTrace();
				}
			}
			if(conn!=null) {
				try {
					conn.close();
				}
				catch(SQLException e) {
					e.printStackTrace();
				}
			}
		}
		
		return role;
	}
	
	public Role addRole(int roleId, String desc) {
		Role role = null;
		Connection conn = null;
		PreparedStatement ps = null;
		
		try {
			Class.forName("com.mysql.cj.jdbc.Driver");
			conn = DriverManager.getConnection(url, id, password);
			String sql = "insert into role values (?, ?);";
			ps = conn.prepareStatement(sql);
			ps.setInt(1, roleId);
			ps.setString(2, desc);
			ps.executeUpdate();
		}
		catch(Exception e){
			e.printStackTrace();
		}
		finally {
			if(ps!=null) {
				try {
					ps.close();
				}
				catch(SQLException e) {
					e.printStackTrace();
				}
			}
			if(conn!=null) {
				try {
					conn.close();
				}
				catch(SQLException e) {
					e.printStackTrace();
				}
			}
		}
		
		return role;
	}
	
	public Role deleteRole(int roleId) {
		Role role = null;
		Connection conn = null;
		PreparedStatement ps = null;
		
		try {
			Class.forName("com.mysql.cj.jdbc.Driver");
			conn = DriverManager.getConnection(url, id, password);
			String sql = "delete from role where role_id = ?;";
			ps = conn.prepareStatement(sql);
			ps.setInt(1, roleId);
			ps.executeUpdate();
		}
		catch(Exception e){
			e.printStackTrace();
		}
		finally {
			if(ps!=null) {
				try {
					ps.close();
				}
				catch(SQLException e) {
					e.printStackTrace();
				}
			}
			if(conn!=null) {
				try {
					conn.close();
				}
				catch(SQLException e) {
					e.printStackTrace();
				}
			}
		}
		
		return role;
	}
	
	public Role updateRole(int roleId) {
		Role role = null;
		Connection conn = null;
		PreparedStatement ps = null;
		
		try {
			Class.forName("com.mysql.cj.jdbc.Driver");
			conn = DriverManager.getConnection(url, id, password);
			String sql = "update role_id set roleId = 999 where roleId = ?;";
			ps = conn.prepareStatement(sql);
			ps.setInt(1, roleId);
			ps.executeUpdate();
		}
		catch(Exception e){
			e.printStackTrace();
		}
		finally {
			if(ps!=null) {
				try {
					ps.close();
				}
				catch(SQLException e) {
					e.printStackTrace();
				}
			}
			if(conn!=null) {
				try {
					conn.close();
				}
				catch(SQLException e) {
					e.printStackTrace();
				}
			}
		}
		
		return role;
	}
	
	public List<Role> allRole(){
		Connection conn = null;
		PreparedStatement ps = null;
		ResultSet rs = null;
		try {
			Class.forName("com.mysql.cj.jdbc.Driver");
			conn = DriverManager.getConnection(url,id,password);
			String sql = "select * from role_id";
			ps = conn.prepareStatement(sql);
			rs = ps.executeQuery();
			if(rs.next()) {
				int id = rs.getInt(1);
				String desc = rs.getString(2);
				list.add(new Role(id, desc));
			}
		}
		catch(Exception e) {
			e.printStackTrace();
		}
	}
}
